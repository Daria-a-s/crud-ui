{"version":3,"sources":["components/List.js","components/ListHeader.js","components/AddBtn.js","App.js","index.js","registerServiceWorker.js"],"names":["List","state","flag","id","this","props","people","map","item","className","key","_id","readOnly","defaultValue","data","name","phone","email","onClick","removeRow","type","e","editRow","target","Component","ListHeader","AddBtn","onSubmit","handleSubmit","onChange","handleChangeName","handleChangePhone","handleChangeEmail","App","event","setState","value","preventDefault","reset","axios","put","then","res","push","delete","filter","i","displayIcon","ReactDOM","render","document","getElementById","nameField","phoneField","emailField","index","findIndex","post","peoples","curName","get","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error"],"mappings":"kRAKqBA,E,4MACnBC,MAAQ,CACNC,MAAM,G,4CAER,WAAU,IAAD,OACL,OACE,2BAAOC,GAAG,kBACTC,KAAKC,MAAMC,OAAOC,KAAI,SAACC,GAAD,OACrB,wBAAIC,UAAY,UAAUC,IAAOF,EAAKG,IAAKR,GAAIK,EAAKG,IAAKC,UAAU,GAC/D,4BAAI,2BAAOH,UAAU,YAAYN,GAAI,OAAOK,EAAKG,IAAKE,aAAcL,EAAKM,KAAKC,KAAMH,UAAU,KAC9F,4BAAI,2BAAOH,UAAU,YAAYN,GAAI,QAAQK,EAAKG,IAAKE,aAAcL,EAAKM,KAAKE,MAAOJ,UAAU,KAChG,4BAAI,2BAAOH,UAAU,YAAYN,GAAI,QAAQK,EAAKG,IAAKE,aAAcL,EAAKM,KAAKG,MAAOL,UAAU,KAChG,4BACE,4BAAQH,UAAU,SAASS,QAAS,kBAAM,EAAKb,MAAMc,UAAUX,EAAKG,OAClE,kBAAC,IAAD,OAEF,4BAAQS,KAAK,SAASX,UAAU,OAAON,GAAI,OAAOK,EAAKG,IAAKO,QAAS,SAACG,GAAD,OAAO,EAAKhB,MAAMiB,QAAQd,EAAKG,IAAIU,EAAEE,OAAQ,EAAKtB,MAAMC,QAC3H,kBAAC,IAAD,iB,GAjBgBsB,aCWjBC,EAbE,WACb,OACE,+BACE,4BACE,oCACA,4CACA,qCACA,gCCPSC,E,4JAEnB,WACI,OACE,yBAAKjB,UAAU,UACf,0BAAMkB,SAAUvB,KAAKC,MAAMuB,cACzB,8CAEE,2BAAOR,KAAK,OAAOL,KAAK,OAAOc,SAAUzB,KAAKC,MAAMyB,oBAEtD,+CAEE,2BAAOV,KAAK,OAAOL,KAAK,QAAQc,SAAUzB,KAAKC,MAAM0B,qBAEvD,wCAEE,2BAAOX,KAAK,OAAOL,KAAK,QAAQc,SAAUzB,KAAKC,MAAM2B,qBAEvD,4BAAQZ,KAAK,SAASX,UAAU,UAAhC,a,GAlB0Be,a,iCC6HrBS,E,kDArHb,aAAe,IAAD,8BACZ,gBAoBFH,iBAAmB,SAAAI,GACjB,EAAKC,SAAS,CAAEpB,KAAMmB,EAAMX,OAAOa,SAtBvB,EAyBdL,kBAAoB,SAAAG,GAClB,EAAKC,SAAS,CAAEnB,MAAOkB,EAAMX,OAAOa,SA1BxB,EA6BdJ,kBAAoB,SAAAE,GAClB,EAAKC,SAAS,CAAElB,MAAOiB,EAAMX,OAAOa,SA9BxB,EAiCdR,aAAe,SAAAM,GACXA,EAAMG,iBAEN,IAAMvB,EAAO,CACTC,KAAM,EAAKd,MAAMc,KACjBC,MAAO,EAAKf,MAAMe,MAClBC,MAAO,EAAKhB,MAAMgB,OAGTiB,EAAMX,OACde,QAELC,IAAMC,IAAI,0CAA2C,CAAC1B,SACnD2B,MACC,SAAAC,GACA,EAAKzC,MAAMK,OAAOqC,KAAKD,EAAI5B,MAC3B,IAAMR,EAAS,EAAKL,MAAMK,OAC1B,EAAK6B,SAAS,CAAC7B,eAlDT,EAuDda,UAAY,SAAAhB,GACVoC,IAAMK,OAAN,kDAAwDzC,IACrDsC,MAAK,WACJ,IAAMnC,EAAS,EAAKL,MAAMK,OAAOuC,QAAO,SAAAC,GAAC,OAAIA,EAAEnC,MAAQR,KACvD,EAAKgC,SAAS,CAAC7B,eA3DP,EA+DdyC,YAAc,SAAC5C,GAET,EAAKF,MAAMC,MACb,EAAKD,MAAMC,MAAQ,EAAKD,MAAMC,KAC9B8C,IAASC,OAAO,kBAAC,IAAD,MAAqBC,SAASC,eAAT,cAA+BhD,OAGlE,EAAKF,MAAMC,MAAQ,EAAKD,MAAMC,KAC9B8C,IAASC,OAAO,kBAAC,IAAD,MAAqBC,SAASC,eAAT,cAA+BhD,OAvE5D,EA2EdmB,QAAU,SAACnB,GACT,EAAK4C,YAAY5C,GACjB,IAAMiD,EAAYF,SAASC,eAAT,cAA+BhD,IAC3CkD,EAAaH,SAASC,eAAT,eAAgChD,IAC7CmD,EAAaJ,SAASC,eAAT,eAAgChD,IACnDiD,EAAUxC,UAAYwC,EAAUxC,SAChCyC,EAAWzC,UAAYyC,EAAWzC,SAClC0C,EAAW1C,UAAY0C,EAAW1C,SAElC,IAAM2C,EAAQ,EAAKtD,MAAMK,OAAOkD,WAAU,SAAAnC,GAAC,OAAEA,EAAEV,MAAMR,KACrD,EAAKF,MAAMK,OAAOiD,GAAOzC,KAAKC,KAAOmC,SAASC,eAAT,cAA+BhD,IAAMiC,MAC1E,EAAKnC,MAAMK,OAAOiD,GAAOzC,KAAKE,MAAQkC,SAASC,eAAT,eAAgChD,IAAMiC,MAC5E,EAAKnC,MAAMK,OAAOiD,GAAOzC,KAAKG,MAAQiC,SAASC,eAAT,eAAgChD,IAAMiC,MAC5EG,IAAMkB,KAAN,kDAAsDtD,GAAM,EAAKF,MAAMK,OAAOiD,IAC7Ed,MAAK,SAACC,GACL,IAAMgB,EAAU,EAAKzD,MAAMK,OAC3B,EAAK6B,SAAS,CAACuB,gBAxFjB,EAAKzD,MAAQ,CACX0D,QAAS,GACT5C,KAAM,GACNC,MAAO,GACPC,MAAO,GACPf,MAAM,EACNI,OAAQ,IATE,E,qDAad,WAAqB,IAAD,OAClBiC,IAAMqB,IAAI,2CACPnB,MAAK,SAAAC,GACJ,IAAMpC,EAASoC,EAAI5B,KACnB,EAAKqB,SAAS,CAAC7B,gB,oBA8ErB,WACE,OACE,yBAAKG,UAAU,OACb,+BACA,qDACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMH,OAASF,KAAKH,MAAMK,OACpBa,UAAWf,KAAKe,UAChBG,QAASlB,KAAKkB,QACdpB,KAAME,KAAKH,MAAMC,KACjByD,QAASvD,KAAKH,MAAM0D,QACpBZ,YAAa3C,KAAK2C,eAExB,kBAAC,EAAD,CAAQnB,aAAexB,KAAKwB,aACpBE,iBAAkB1B,KAAK0B,iBACvBC,kBAAmB3B,KAAK2B,kBACxBC,kBAAmB5B,KAAK4B,yB,GAhHtBR,a,MCJlBwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SCKF,kBAAmBU,WAC9DC,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMC,EAAK,UAAMC,WAAN,sBACXJ,UAAUK,cACPC,SAASH,GACTvB,MAAK,SAAA2B,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrE,QACf4D,UAAUK,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,U","file":"static/js/main.b7298d7e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\n\r\nexport default class List extends Component {\r\n  state = {\r\n    flag: true\r\n  }\r\n  render() {\r\n      return (\r\n        <tbody id=\"bodyOfTheTable\">\r\n        {this.props.people.map((item) => \r\n          <tr className = \"listRow\" key = {item._id} id={item._id} readOnly={true} >\r\n              <td><input className=\"tableCell\" id={\"name\"+item._id} defaultValue={item.data.name} readOnly={true}/></td>\r\n              <td><input className=\"tableCell\" id={\"phone\"+item._id} defaultValue={item.data.phone} readOnly={true}/></td>\r\n              <td><input className=\"tableCell\" id={\"email\"+item._id} defaultValue={item.data.email} readOnly={true}/></td>\r\n              <td>\r\n                <button className=\"delete\" onClick={() => this.props.removeRow(item._id)}>\r\n                  <DeleteOutlineOutlinedIcon/>\r\n                </button>\r\n                <button type=\"submit\" className=\"edit\" id={\"icon\"+item._id} onClick={(e) => this.props.editRow(item._id,e.target, this.state.flag)}>\r\n                  <EditOutlinedIcon/>\r\n                </button>\r\n              </td>\r\n          </tr>\r\n        )}\r\n        </tbody>\r\n      );   \r\n }\r\n}","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst ListHeader = () => {\r\n      return (\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Phone Number</th>\r\n            <th>Email</th>\r\n            <th></th>\r\n          </tr>\r\n          </thead>\r\n      );\r\n}\r\n\r\n  export default ListHeader;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nexport default class AddBtn extends Component {\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"addRow\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <label>\r\n            Person Name:\r\n            <input type=\"text\" name=\"name\" onChange={this.props.handleChangeName} />\r\n          </label>\r\n          <label>\r\n            Phone Number:\r\n            <input type=\"text\" name=\"phone\" onChange={this.props.handleChangePhone} />\r\n          </label>\r\n          <label>\r\n            Email:\r\n            <input type=\"text\" name=\"email\" onChange={this.props.handleChangeEmail} />\r\n          </label>\r\n          <button type=\"submit\" className=\"addBtn\">Add</button>\r\n        </form>\r\n      </div>\r\n      );\r\n }\r\n \r\n}","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport List from './components/List';\r\nimport ListHeader from './components/ListHeader';\r\nimport AddBtn from './components/AddBtn';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\r\nimport './App.css';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      curName: '',\r\n      name: '',\r\n      phone: '',\r\n      email: '',\r\n      flag: false,\r\n      people: []\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get('http://178.128.196.163:3000/api/records')\r\n      .then(res => {\r\n        const people = res.data;\r\n        this.setState({people});\r\n      })\r\n  }\r\n\r\n  handleChangeName = event => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleChangePhone = event => {\r\n    this.setState({ phone: event.target.value });\r\n  }\r\n\r\n  handleChangeEmail = event => {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n      event.preventDefault();\r\n\r\n      const data = {\r\n          name: this.state.name,\r\n          phone: this.state.phone,\r\n          email: this.state.email\r\n      }\r\n\r\n      const form = event.target;\r\n      form.reset()\r\n\r\n      axios.put('http://178.128.196.163:3000/api/records', {data})\r\n        .then(\r\n          res => {\r\n          this.state.people.push(res.data);\r\n          const people = this.state.people;\r\n          this.setState({people});\r\n        }\r\n        )\r\n  }\r\n\r\n  removeRow = id => {\r\n    axios.delete(`http://178.128.196.163:3000/api/records/${id}`)\r\n      .then(() => {\r\n        const people = this.state.people.filter(i => i._id !== id)\r\n        this.setState({people});\r\n      })\r\n  }\r\n\r\n  displayIcon = (id) => {\r\n    \r\n    if (this.state.flag) {\r\n      this.state.flag = !this.state.flag\r\n      ReactDOM.render(<EditOutlinedIcon/>, document.getElementById(`icon${id}`))\r\n    }\r\n      else {\r\n        this.state.flag = !this.state.flag\r\n        ReactDOM.render(<SaveOutlinedIcon/>, document.getElementById(`icon${id}`))\r\n      } \r\n  }\r\n\r\n  editRow = (id) => {\r\n    this.displayIcon(id);\r\n    const nameField = document.getElementById(`name${id}`)\r\n    const phoneField = document.getElementById(`phone${id}`)\r\n    const emailField = document.getElementById(`email${id}`)\r\n    nameField.readOnly = !nameField.readOnly\r\n    phoneField.readOnly = !phoneField.readOnly\r\n    emailField.readOnly = !emailField.readOnly\r\n\r\n    const index = this.state.people.findIndex(e=>e._id===id)\r\n    this.state.people[index].data.name = document.getElementById(`name${id}`).value\r\n    this.state.people[index].data.phone = document.getElementById(`phone${id}`).value\r\n    this.state.people[index].data.email = document.getElementById(`email${id}`).value\r\n    axios.post(`http://178.128.196.163:3000/api/records/${id}`, this.state.people[index])\r\n    .then((res) => {\r\n      const peoples = this.state.people;\r\n      this.setState({peoples})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <table>\r\n        <caption>CRUD Application</caption>\r\n        <ListHeader />\r\n        <List people={ this.state.people }\r\n              removeRow={this.removeRow}\r\n              editRow={this.editRow}\r\n              flag={this.state.flag}\r\n              curName={this.state.curName}\r\n              displayIcon={this.displayIcon}/>\r\n        </table>\r\n        <AddBtn handleSubmit={ this.handleSubmit }\r\n                handleChangeName={this.handleChangeName}\r\n                handleChangePhone={this.handleChangePhone}\r\n                handleChangeEmail={this.handleChangeEmail}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n          registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            installingWorker.onstatechange = () => {\r\n              if (installingWorker.state === 'installed') {\r\n                if (navigator.serviceWorker.controller) {\r\n                  // At this point, the old content will have been purged and\r\n                  // the fresh content will have been added to the cache.\r\n                  // It's the perfect time to display a \"New content is\r\n                  // available; please refresh.\" message in your web app.\r\n                  console.log('New content is available; please refresh.');\r\n                } else {\r\n                  // At this point, everything has been precached.\r\n                  // It's the perfect time to display a\r\n                  // \"Content is cached for offline use.\" message.\r\n                  console.log('Content is cached for offline use.');\r\n                }\r\n              }\r\n            };\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during service worker registration:', error);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}